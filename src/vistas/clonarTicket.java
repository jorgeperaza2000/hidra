/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controladores.f_clonar_ticket;
import controladores.f_sorteos;
import controladores.f_taquilla;
import java.io.IOException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.json.simple.parser.ParseException;

/**
 *
 * @author jorge
 */
public class clonarTicket extends javax.swing.JDialog {
    private final f_clonar_ticket clonar_ticket = new f_clonar_ticket();
    
    /**
     * Creates new form clonal
     */
    public clonarTicket(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.cargarFechaHoy();
        this.jTextFieldNumeroTicket.requestFocus(true);
        clonar_ticket.formatjTableSorteos(jTableSorteos);
        clonar_ticket.formatjTableSorteosDisponibles(jTableSorteosDisponibles);
        new f_taquilla().formatjTableApuesta(this.jTableApuesta);
        
        getRootPane().getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW).put(
            javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), "Cancel");
        
        getRootPane().getActionMap().put("Cancel", new javax.swing.AbstractAction(){
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                close();
            }
        });
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                close();
            }
        });
        
    }
    
    private void close(){
        this.dispose();
    }
    
    private void cargarFechaHoy() {
        Calendar calendario = Calendar.getInstance();
        int dia = calendario.get(Calendar.DAY_OF_MONTH);
        int mes = calendario.get(Calendar.MONTH);
        int ano = calendario.get(Calendar.YEAR);
        int mesCompleto = mes + 1;
        this.jTextFieldFecha.setText(dia+"-"+mesCompleto+"-"+ano);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSorteos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSorteosDisponibles = new javax.swing.JTable();
        jButtonEliminarSorteo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableApuesta = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex) {
                return false;
            }
        }
        ;
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldFecha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNumeroTicket = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jButtonClonarTicket = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LottoActivo :: Clonar Ticket");
        setResizable(false);

        jPanel1.setBackground(java.awt.Color.white);

        jTableSorteos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableSorteos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Anterior", "Sorteo Anterior", "Id Nuevo", "Sorteo Nuevo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSorteos.setRowHeight(20);
        jTableSorteos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableSorteos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableSorteos);

        jTableSorteosDisponibles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableSorteosDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Sorteo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSorteosDisponibles.setRowHeight(20);
        jTableSorteosDisponibles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableSorteosDisponibles.getTableHeader().setReorderingAllowed(false);
        jTableSorteosDisponibles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSorteosDisponiblesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableSorteosDisponibles);

        jButtonEliminarSorteo.setText("Eliminar Sorteo");
        jButtonEliminarSorteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarSorteoActionPerformed(evt);
            }
        });

        jTableApuesta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Jugada", "id_sorteo", "Sorteo", "Apuesta (Bs)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableApuesta.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTableApuesta);

        jPanel2.setBackground(new java.awt.Color(19, 127, 141));

        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Fecha");

        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Numero de ticket:");

        jTextFieldNumeroTicket.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNumeroTicketKeyPressed(evt);
            }
        });

        jButtonBuscar.setText("Buscar Ticket");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonClonarTicket.setBackground(new java.awt.Color(19, 127, 141));
        jButtonClonarTicket.setForeground(java.awt.Color.white);
        jButtonClonarTicket.setText("Clonar Ticket");
        jButtonClonarTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClonarTicketActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNumeroTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jButtonBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonClonarTicket)
                .addGap(18, 18, 18)
                .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonClonarTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldNumeroTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonEliminarSorteo)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEliminarSorteo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        if ( !"".equals( this.jTextFieldFecha.getText() ) && !"".equals( this.jTextFieldNumeroTicket.getText() ) ) {
            try {
                clonar_ticket.buscarTicket(jTableApuesta, jTableSorteos, jTableSorteosDisponibles, jTextFieldFecha, jTextFieldNumeroTicket);
            } catch (IOException | ParseException ex) {
                Logger.getLogger(clonarTicket.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonClonarTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClonarTicketActionPerformed
        DefaultTableModel temporalModelSorteosClone = (DefaultTableModel) this.jTableSorteos.getModel();
        DefaultTableModel temporalModelApuestasClone = (DefaultTableModel) this.jTableApuesta.getModel();
        
        for (int i = 0; i < temporalModelSorteosClone.getRowCount(); i++ ) {
            int idSorteo;
            for (int j = 0; j < temporalModelApuestasClone.getRowCount(); j++) {
                if ( temporalModelApuestasClone.getValueAt(j, 2).equals(temporalModelSorteosClone.getValueAt(i, 0))) {
                    String temp = (String) temporalModelSorteosClone.getValueAt(i, 2);
                    if ( temp == null) {
                        temporalModelApuestasClone.setValueAt(temporalModelSorteosClone.getValueAt(i, 0), j, 2);
                        idSorteo = Integer.parseInt((String) temporalModelSorteosClone.getValueAt(i, 0));
                    } else {
                        temporalModelApuestasClone.setValueAt(temporalModelSorteosClone.getValueAt(i, 2), j, 2);
                        idSorteo = Integer.parseInt((String) temporalModelSorteosClone.getValueAt(i, 2));
                    }
                    
                    String nombreSorteo = new f_sorteos().nombreSorteos(idSorteo);
                    temporalModelApuestasClone.setValueAt(nombreSorteo, j, 3);
                }
            }
        }
        
        DefaultTableModel modelApuestasClone = (DefaultTableModel) this.jTableApuesta.getModel();
        taquilla.modeloTabla = modelApuestasClone;
        this.dispose();
    }//GEN-LAST:event_jButtonClonarTicketActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTableSorteosDisponiblesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSorteosDisponiblesMouseClicked

        if ( this.jTableSorteos.getSelectedRowCount() > 0 ){
            int rowSorteo = this.jTableSorteos.getSelectedRow();
            int rowSorteoDisponible = this.jTableSorteosDisponibles.getSelectedRow();

            String idDisponible = (String) this.jTableSorteosDisponibles.getValueAt(rowSorteoDisponible, 0);
            String  sorteoDisponible = (String) this.jTableSorteosDisponibles.getValueAt(rowSorteoDisponible, 1);

            this.jTableSorteos.setValueAt(idDisponible, rowSorteo, 2);
            this.jTableSorteos.setValueAt(sorteoDisponible, rowSorteo, 3);
            
        }

    }//GEN-LAST:event_jTableSorteosDisponiblesMouseClicked

    private void jButtonEliminarSorteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarSorteoActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTableSorteos.getModel();
        int[] rows = jTableSorteos.getSelectedRows();
        String sorteoEliminar = null;
        
        while( rows.length > 0 ) {
            sorteoEliminar = (String) modelo.getValueAt(rows[0], 0);
            modelo.removeRow(jTableSorteos.convertRowIndexToModel(rows[0]));
            rows = jTableSorteos.getSelectedRows();
        }
        
        DefaultTableModel temporalModelApuestasClone = (DefaultTableModel) this.jTableApuesta.getModel();
        
        int cantApuestas = temporalModelApuestasClone.getRowCount();
        
        for (int j = 0; j < cantApuestas; j++) {
            String idSorteoApuesta = (String) temporalModelApuestasClone.getValueAt(j, 2);
            if ( idSorteoApuesta.equals(sorteoEliminar)) {
                temporalModelApuestasClone.removeRow(j);
                j = j - 1;
                cantApuestas = temporalModelApuestasClone.getRowCount();
            }
        }
    }//GEN-LAST:event_jButtonEliminarSorteoActionPerformed

    private void jTextFieldNumeroTicketKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumeroTicketKeyPressed
        if (evt.getKeyCode() == 10 ) {
            if ( !"".equals( this.jTextFieldFecha.getText() ) && !"".equals( this.jTextFieldNumeroTicket.getText() ) ) {
                this.jButtonBuscar.doClick();
            }
        }
    }//GEN-LAST:event_jTextFieldNumeroTicketKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(clonarTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(clonarTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(clonarTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(clonarTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                clonarTicket dialog = new clonarTicket(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonClonarTicket;
    private javax.swing.JButton jButtonEliminarSorteo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableApuesta;
    private javax.swing.JTable jTableSorteos;
    private javax.swing.JTable jTableSorteosDisponibles;
    private javax.swing.JTextField jTextFieldFecha;
    private javax.swing.JTextField jTextFieldNumeroTicket;
    // End of variables declaration//GEN-END:variables
}
